///Rewriting of the TF2 Brainfuck compiler

///EXECUTION
	*ptr>0
	sv_allow_wait_command 1
	alias "airgap" "wait 1"

///MEMORY
	exec brainf/memory
	
///INCREMENT (inc)
	//Simple incrementor: every bit until the first bit that is off is turned off; The first off bit is turned on
	alias "inc" "*ptr_inc__b0"
		alias "*ptr_inc__b0" "alias true *ptr_inc__b1; alias false *ptr_b0_t; airgap; *ptr_b0"
		alias "*ptr_inc__b1" "*ptr_b0_f; alias true *ptr_inc__b2; alias false *ptr_b1_t; airgap; *ptr_b1"
		alias "*ptr_inc__b2" "*ptr_b1_f; alias true *ptr_inc__b3; alias false *ptr_b2_t; airgap; *ptr_b2"
		alias "*ptr_inc__b3" "*ptr_b2_f; alias true *ptr_inc__b4; alias false *ptr_b3_t; airgap; *ptr_b3"
		alias "*ptr_inc__b4" "*ptr_b3_f; alias true *ptr_inc__b5; alias false *ptr_b4_t; airgap; *ptr_b4"
		alias "*ptr_inc__b5" "*ptr_b4_f; alias true *ptr_inc__b6; alias false *ptr_b5_t; airgap; *ptr_b5"
		alias "*ptr_inc__b6" "*ptr_b5_f; alias true *ptr_inc__b7; alias false *ptr_b6_t; airgap; *ptr_b6"
		alias "*ptr_inc__b7" "*ptr_b6_f; alias true *ptr_b7_f; alias false *ptr_b7_t; airgap; *ptr_b7"

///DECREMENT (dec)
	//Simple decrementor: every bit until the first on bit is turned on; The first off bit is turned off
	alias "dec" "*ptr_dec__b0"
		alias "*ptr_dec__b0" "alias true *ptr_b0_f; alias false *ptr_dec__b1; airgap; *ptr_b0"
		alias "*ptr_dec__b1" "*ptr_b0_t; alias true *ptr_b1_f; alias false *ptr_dec__b2; airgap; *ptr_b1"
		alias "*ptr_dec__b2" "*ptr_b1_t; alias true *ptr_b2_f; alias false *ptr_dec__b3; airgap; *ptr_b2"
		alias "*ptr_dec__b3" "*ptr_b2_t; alias true *ptr_b3_f; alias false *ptr_dec__b4; airgap; *ptr_b3"
		alias "*ptr_dec__b4" "*ptr_b3_t; alias true *ptr_b4_f; alias false *ptr_dec__b5; airgap; *ptr_b4"
		alias "*ptr_dec__b5" "*ptr_b4_t; alias true *ptr_b5_f; alias false *ptr_dec__b6; airgap; *ptr_b5"
		alias "*ptr_dec__b6" "*ptr_b5_t; alias true *ptr_b6_f; alias false *ptr_dec__b7; airgap; *ptr_b6"
		alias "*ptr_dec__b7" "*ptr_b6_t; alias true *ptr_b7_f; alias false *ptr_b7_t; airgap; *ptr_b7"

///INCREMENT POINTER (ptr+)
	alias "ptr+" "0_*ptr_forward"

///DECREMENT POINTER (ptr-)
	alias "ptr-" "0_*ptr_back"

///INPUT (any char)
	//No semicolon or double quotes support due to engine limits
	alias "!" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_f; *ptr_b3_f; *ptr_b2_f; *ptr_b1_f; *ptr_b0_t"
	alias "#" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_f; *ptr_b3_f; *ptr_b2_f; *ptr_b1_t; *ptr_b0_t"
	alias "$" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_f; *ptr_b3_f; *ptr_b2_t; *ptr_b1_f; *ptr_b0_f"
	alias "%" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_f; *ptr_b3_f; *ptr_b2_t; *ptr_b1_f; *ptr_b0_t"
	alias "&" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_f; *ptr_b3_f; *ptr_b2_t; *ptr_b1_t; *ptr_b0_f"
	alias "'" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_f; *ptr_b3_f; *ptr_b2_t; *ptr_b1_t; *ptr_b0_t"
	alias "(" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_f; *ptr_b3_t; *ptr_b2_f; *ptr_b1_f; *ptr_b0_f"
	alias ")" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_f; *ptr_b3_t; *ptr_b2_f; *ptr_b1_f; *ptr_b0_t"
	alias "*" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_f; *ptr_b3_t; *ptr_b2_f; *ptr_b1_t; *ptr_b0_f"
	alias "+" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_f; *ptr_b3_t; *ptr_b2_f; *ptr_b1_t; *ptr_b0_t"
	alias "," "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_f; *ptr_b3_t; *ptr_b2_t; *ptr_b1_f; *ptr_b0_f"
	alias "-" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_f; *ptr_b3_t; *ptr_b2_t; *ptr_b1_f; *ptr_b0_t"
	alias "." "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_f; *ptr_b3_t; *ptr_b2_t; *ptr_b1_t; *ptr_b0_f"
	alias "/" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_f; *ptr_b3_t; *ptr_b2_t; *ptr_b1_t; *ptr_b0_t"
	alias "0" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_t; *ptr_b3_f; *ptr_b2_f; *ptr_b1_f; *ptr_b0_f"
	alias "1" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_t; *ptr_b3_f; *ptr_b2_f; *ptr_b1_f; *ptr_b0_t"
	alias "2" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_t; *ptr_b3_f; *ptr_b2_f; *ptr_b1_t; *ptr_b0_f"
	alias "3" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_t; *ptr_b3_f; *ptr_b2_f; *ptr_b1_t; *ptr_b0_t"
	alias "4" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_t; *ptr_b3_f; *ptr_b2_t; *ptr_b1_f; *ptr_b0_f"
	alias "5" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_t; *ptr_b3_f; *ptr_b2_t; *ptr_b1_f; *ptr_b0_t"
	alias "6" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_t; *ptr_b3_f; *ptr_b2_t; *ptr_b1_t; *ptr_b0_f"
	alias "7" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_t; *ptr_b3_f; *ptr_b2_t; *ptr_b1_t; *ptr_b0_t"
	alias "8" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_t; *ptr_b3_t; *ptr_b2_f; *ptr_b1_f; *ptr_b0_f"
	alias "9" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_t; *ptr_b3_t; *ptr_b2_f; *ptr_b1_f; *ptr_b0_t"
	alias ":" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_t; *ptr_b3_t; *ptr_b2_f; *ptr_b1_t; *ptr_b0_f"
	alias "<" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_t; *ptr_b3_t; *ptr_b2_t; *ptr_b1_f; *ptr_b0_f"
	alias "=" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_t; *ptr_b3_t; *ptr_b2_t; *ptr_b1_f; *ptr_b0_t"
	alias ">" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_t; *ptr_b3_t; *ptr_b2_t; *ptr_b1_t; *ptr_b0_f"
	alias "?" "*ptr_b7_f; *ptr_b6_f; *ptr_b5_t; *ptr_b4_t; *ptr_b3_t; *ptr_b2_t; *ptr_b1_t; *ptr_b0_t"
	alias "@" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_f; *ptr_b3_f; *ptr_b2_f; *ptr_b1_f; *ptr_b0_f"
	alias "A" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_f; *ptr_b3_f; *ptr_b2_f; *ptr_b1_f; *ptr_b0_t"
	alias "B" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_f; *ptr_b3_f; *ptr_b2_f; *ptr_b1_t; *ptr_b0_f"
	alias "C" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_f; *ptr_b3_f; *ptr_b2_f; *ptr_b1_t; *ptr_b0_t"
	alias "D" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_f; *ptr_b3_f; *ptr_b2_t; *ptr_b1_f; *ptr_b0_f"
	alias "E" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_f; *ptr_b3_f; *ptr_b2_t; *ptr_b1_f; *ptr_b0_t"
	alias "F" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_f; *ptr_b3_f; *ptr_b2_t; *ptr_b1_t; *ptr_b0_f"
	alias "G" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_f; *ptr_b3_f; *ptr_b2_t; *ptr_b1_t; *ptr_b0_t"
	alias "H" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_f; *ptr_b3_t; *ptr_b2_f; *ptr_b1_f; *ptr_b0_f"
	alias "I" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_f; *ptr_b3_t; *ptr_b2_f; *ptr_b1_f; *ptr_b0_t"
	alias "J" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_f; *ptr_b3_t; *ptr_b2_f; *ptr_b1_t; *ptr_b0_f"
	alias "K" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_f; *ptr_b3_t; *ptr_b2_f; *ptr_b1_t; *ptr_b0_t"
	alias "L" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_f; *ptr_b3_t; *ptr_b2_t; *ptr_b1_f; *ptr_b0_f"
	alias "M" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_f; *ptr_b3_t; *ptr_b2_t; *ptr_b1_f; *ptr_b0_t"
	alias "N" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_f; *ptr_b3_t; *ptr_b2_t; *ptr_b1_t; *ptr_b0_f"
	alias "O" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_f; *ptr_b3_t; *ptr_b2_t; *ptr_b1_t; *ptr_b0_t"
	alias "P" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_t; *ptr_b3_f; *ptr_b2_f; *ptr_b1_f; *ptr_b0_f"
	alias "Q" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_t; *ptr_b3_f; *ptr_b2_f; *ptr_b1_f; *ptr_b0_t"
	alias "R" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_t; *ptr_b3_f; *ptr_b2_f; *ptr_b1_t; *ptr_b0_f"
	alias "S" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_t; *ptr_b3_f; *ptr_b2_f; *ptr_b1_t; *ptr_b0_t"
	alias "T" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_t; *ptr_b3_f; *ptr_b2_t; *ptr_b1_f; *ptr_b0_f"
	alias "U" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_t; *ptr_b3_f; *ptr_b2_t; *ptr_b1_f; *ptr_b0_t"
	alias "V" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_t; *ptr_b3_f; *ptr_b2_t; *ptr_b1_t; *ptr_b0_f"
	alias "W" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_t; *ptr_b3_f; *ptr_b2_t; *ptr_b1_t; *ptr_b0_t"
	alias "X" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_t; *ptr_b3_t; *ptr_b2_f; *ptr_b1_f; *ptr_b0_f"
	alias "Y" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_t; *ptr_b3_t; *ptr_b2_f; *ptr_b1_f; *ptr_b0_t"
	alias "Z" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_t; *ptr_b3_t; *ptr_b2_f; *ptr_b1_t; *ptr_b0_f"
	alias "[" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_t; *ptr_b3_t; *ptr_b2_f; *ptr_b1_t; *ptr_b0_t"
	alias "\" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_t; *ptr_b3_t; *ptr_b2_t; *ptr_b1_f; *ptr_b0_f"
	alias "]" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_t; *ptr_b3_t; *ptr_b2_t; *ptr_b1_f; *ptr_b0_t"
	alias "^" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_t; *ptr_b3_t; *ptr_b2_t; *ptr_b1_t; *ptr_b0_f"
	alias "_" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_f; *ptr_b4_t; *ptr_b3_t; *ptr_b2_t; *ptr_b1_t; *ptr_b0_t"
	alias "`" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_f; *ptr_b3_f; *ptr_b2_f; *ptr_b1_f; *ptr_b0_f"
	alias "a" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_f; *ptr_b3_f; *ptr_b2_f; *ptr_b1_f; *ptr_b0_t"
	alias "b" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_f; *ptr_b3_f; *ptr_b2_f; *ptr_b1_t; *ptr_b0_f"
	alias "c" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_f; *ptr_b3_f; *ptr_b2_f; *ptr_b1_t; *ptr_b0_t"
	alias "d" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_f; *ptr_b3_f; *ptr_b2_t; *ptr_b1_f; *ptr_b0_f"
	alias "e" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_f; *ptr_b3_f; *ptr_b2_t; *ptr_b1_f; *ptr_b0_t"
	alias "f" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_f; *ptr_b3_f; *ptr_b2_t; *ptr_b1_t; *ptr_b0_f"
	alias "g" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_f; *ptr_b3_f; *ptr_b2_t; *ptr_b1_t; *ptr_b0_t"
	alias "h" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_f; *ptr_b3_t; *ptr_b2_f; *ptr_b1_f; *ptr_b0_f"
	alias "i" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_f; *ptr_b3_t; *ptr_b2_f; *ptr_b1_f; *ptr_b0_t"
	alias "j" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_f; *ptr_b3_t; *ptr_b2_f; *ptr_b1_t; *ptr_b0_f"
	alias "k" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_f; *ptr_b3_t; *ptr_b2_f; *ptr_b1_t; *ptr_b0_t"
	alias "l" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_f; *ptr_b3_t; *ptr_b2_t; *ptr_b1_f; *ptr_b0_f"
	alias "m" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_f; *ptr_b3_t; *ptr_b2_t; *ptr_b1_f; *ptr_b0_t"
	alias "n" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_f; *ptr_b3_t; *ptr_b2_t; *ptr_b1_t; *ptr_b0_f"
	alias "o" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_f; *ptr_b3_t; *ptr_b2_t; *ptr_b1_t; *ptr_b0_t"
	alias "p" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_t; *ptr_b3_f; *ptr_b2_f; *ptr_b1_f; *ptr_b0_f"
	alias "q" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_t; *ptr_b3_f; *ptr_b2_f; *ptr_b1_f; *ptr_b0_t"
	alias "r" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_t; *ptr_b3_f; *ptr_b2_f; *ptr_b1_t; *ptr_b0_f"
	alias "s" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_t; *ptr_b3_f; *ptr_b2_f; *ptr_b1_t; *ptr_b0_t"
	alias "t" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_t; *ptr_b3_f; *ptr_b2_t; *ptr_b1_f; *ptr_b0_f"
	alias "u" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_t; *ptr_b3_f; *ptr_b2_t; *ptr_b1_f; *ptr_b0_t"
	alias "v" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_t; *ptr_b3_f; *ptr_b2_t; *ptr_b1_t; *ptr_b0_f"
	alias "w" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_t; *ptr_b3_f; *ptr_b2_t; *ptr_b1_t; *ptr_b0_t"
	alias "x" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_t; *ptr_b3_t; *ptr_b2_f; *ptr_b1_f; *ptr_b0_f"
	alias "y" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_t; *ptr_b3_t; *ptr_b2_f; *ptr_b1_f; *ptr_b0_t"
	alias "z" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_t; *ptr_b3_t; *ptr_b2_f; *ptr_b1_t; *ptr_b0_f"
	alias "{" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_t; *ptr_b3_t; *ptr_b2_f; *ptr_b1_t; *ptr_b0_t"
	alias "|" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_t; *ptr_b3_t; *ptr_b2_t; *ptr_b1_f; *ptr_b0_f"
	alias "}" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_t; *ptr_b3_t; *ptr_b2_t; *ptr_b1_f; *ptr_b0_t"
	alias "~" "*ptr_b7_f; *ptr_b6_t; *ptr_b5_t; *ptr_b4_t; *ptr_b3_t; *ptr_b2_t; *ptr_b1_t; *ptr_b0_f"

///OUTPUT (out)
	alias "out" "alias true out_1; alias false out_0; airgap; *ptr_b7"
		alias "out_0" "alias true out_01; alias false out_00; airgap; *ptr_b6"
			alias "out_00" "alias true out_001; alias false out_000; airgap; *ptr_b5"
				alias "out_000" "alias true out_0001; alias false out_0000; airgap; *ptr_b4"
					alias "out_0000" "alias true out_00001; alias false out_00000; airgap; *ptr_b3"
						alias "out_00000" "alias true out_000001; alias false out_000000; airgap; *ptr_b2"
							alias "out_000000" "alias true out_0000001; alias false out_0000000; airgap; *ptr_b1"
								alias "out_0000000" "alias true echo; alias false echo; airgap; *ptr_b0"
								alias "out_0000001" "alias true echo; alias false echo; airgap; *ptr_b0"
							alias "out_000001" "alias true out_0000011; alias false out_0000010; airgap; *ptr_b1"
								alias "out_0000010" "alias true echo; alias false echo; airgap; *ptr_b0"
								alias "out_0000011" "alias true echo; alias false echo; airgap; *ptr_b0"
						alias "out_00001" "alias true out_000011; alias false out_000010; airgap; *ptr_b2"
							alias "out_000010" "alias true out_0000101; alias false out_0000100; airgap; *ptr_b1"
								alias "out_0000100" "alias true echo; alias false echo; airgap; *ptr_b0"
								alias "out_0000101" "alias true echo; alias false echo; airgap; *ptr_b0"
							alias "out_000011" "alias true out_0000111; alias false out_0000110; airgap; *ptr_b1"
								alias "out_0000110" "alias true echo; alias false echo; airgap; *ptr_b0"
								alias "out_0000111" "alias true echo; alias false echo; airgap; *ptr_b0"
					alias "out_0001" "alias true out_00011; alias false out_00010; airgap; *ptr_b3"
						alias "out_00010" "alias true out_000101; alias false out_000100; airgap; *ptr_b2"
							alias "out_000100" "alias true out_0001001; alias false out_0001000; airgap; *ptr_b1"
								alias "out_0001000" "alias true echo; alias false echo; airgap; *ptr_b0"
								alias "out_0001001" "alias true echo; alias false echo; airgap; *ptr_b0"
							alias "out_000101" "alias true out_0001011; alias false out_0001010; airgap; *ptr_b1"
								alias "out_0001010" "alias true echo; alias false echo; airgap; *ptr_b0"
								alias "out_0001011" "alias true echo; alias false echo; airgap; *ptr_b0"
						alias "out_00011" "alias true out_000111; alias false out_000110; airgap; *ptr_b2"
							alias "out_000110" "alias true out_0001101; alias false out_0001100; airgap; *ptr_b1"
								alias "out_0001100" "alias true echo; alias false echo; airgap; *ptr_b0"
								alias "out_0001101" "alias true echo; alias false echo; airgap; *ptr_b0"
							alias "out_000111" "alias true out_0001111; alias false out_0001110; airgap; *ptr_b1"
								alias "out_0001110" "alias true echo; alias false echo; airgap; *ptr_b0"
								alias "out_0001111" "alias true echo; alias false echo; airgap; *ptr_b0"
				alias "out_001" "alias true out_0011; alias false out_0010; airgap; *ptr_b4"
					alias "out_0010" "alias true out_00101; alias false out_00100; airgap; *ptr_b3"
						alias "out_00100" "alias true out_001001; alias false out_001000; airgap; *ptr_b2"
							alias "out_001000" "alias true out_0010001; alias false out_0010000; airgap; *ptr_b1"
								alias "out_0010000" "alias true echo !; alias false echo; airgap; *ptr_b0"
								alias "out_0010001" "alias true echo #; alias false echo; airgap; *ptr_b0"
							alias "out_001001" "alias true out_0010011; alias false out_0010010; airgap; *ptr_b1"
								alias "out_0010010" "alias true echo %; alias false echo $; airgap; *ptr_b0"
								alias "out_0010011" "alias true echo '; alias false echo &; airgap; *ptr_b0"
						alias "out_00101" "alias true out_001011; alias false out_001010; airgap; *ptr_b2"
							alias "out_001010" "alias true out_0010101; alias false out_0010100; airgap; *ptr_b1"
								alias "out_0010100" "alias true echo ); alias false echo (; airgap; *ptr_b0"
								alias "out_0010101" "alias true echo +; alias false echo *; airgap; *ptr_b0"
							alias "out_001011" "alias true out_0010111; alias false out_0010110; airgap; *ptr_b1"
								alias "out_0010110" "alias true echo -; alias false echo ,; airgap; *ptr_b0"
								alias "out_0010111" "alias true echo /; alias false echo .; airgap; *ptr_b0"
					alias "out_0011" "alias true out_00111; alias false out_00110; airgap; *ptr_b3"
						alias "out_00110" "alias true out_001101; alias false out_001100; airgap; *ptr_b2"
							alias "out_001100" "alias true out_0011001; alias false out_0011000; airgap; *ptr_b1"
								alias "out_0011000" "alias true echo 1; alias false echo 0; airgap; *ptr_b0"
								alias "out_0011001" "alias true echo 3; alias false echo 2; airgap; *ptr_b0"
							alias "out_001101" "alias true out_0011011; alias false out_0011010; airgap; *ptr_b1"
								alias "out_0011010" "alias true echo 5; alias false echo 4; airgap; *ptr_b0"
								alias "out_0011011" "alias true echo 7; alias false echo 6; airgap; *ptr_b0"
						alias "out_00111" "alias true out_001111; alias false out_001110; airgap; *ptr_b2"
							alias "out_001110" "alias true out_0011101; alias false out_0011100; airgap; *ptr_b1"
								alias "out_0011100" "alias true echo 9; alias false echo 8; airgap; *ptr_b0"
								alias "out_0011101" "alias true echo; alias false echo :; airgap; *ptr_b0"
							alias "out_001111" "alias true out_0011111; alias false out_0011110; airgap; *ptr_b1"
								alias "out_0011110" "alias true echo =; alias false echo <; airgap; *ptr_b0"
								alias "out_0011111" "alias true echo ?; alias false echo >; airgap; *ptr_b0"
			alias "out_01" "alias true out_011; alias false out_010; airgap; *ptr_b5"
				alias "out_010" "alias true out_0101; alias false out_0100; airgap; *ptr_b4"
					alias "out_0100" "alias true out_01001; alias false out_01000; airgap; *ptr_b3"
						alias "out_01000" "alias true out_010001; alias false out_010000; airgap; *ptr_b2"
							alias "out_010000" "alias true out_0100001; alias false out_0100000; airgap; *ptr_b1"
								alias "out_0100000" "alias true echo A; alias false echo @; airgap; *ptr_b0"
								alias "out_0100001" "alias true echo C; alias false echo B; airgap; *ptr_b0"
							alias "out_010001" "alias true out_0100011; alias false out_0100010; airgap; *ptr_b1"
								alias "out_0100010" "alias true echo E; alias false echo D; airgap; *ptr_b0"
								alias "out_0100011" "alias true echo G; alias false echo F; airgap; *ptr_b0"
						alias "out_01001" "alias true out_010011; alias false out_010010; airgap; *ptr_b2"
							alias "out_010010" "alias true out_0100101; alias false out_0100100; airgap; *ptr_b1"
								alias "out_0100100" "alias true echo I; alias false echo H; airgap; *ptr_b0"
								alias "out_0100101" "alias true echo K; alias false echo J; airgap; *ptr_b0"
							alias "out_010011" "alias true out_0100111; alias false out_0100110; airgap; *ptr_b1"
								alias "out_0100110" "alias true echo M; alias false echo L; airgap; *ptr_b0"
								alias "out_0100111" "alias true echo O; alias false echo N; airgap; *ptr_b0"
					alias "out_0101" "alias true out_01011; alias false out_01010; airgap; *ptr_b3"
						alias "out_01010" "alias true out_010101; alias false out_010100; airgap; *ptr_b2"
							alias "out_010100" "alias true out_0101001; alias false out_0101000; airgap; *ptr_b1"
								alias "out_0101000" "alias true echo Q; alias false echo P; airgap; *ptr_b0"
								alias "out_0101001" "alias true echo S; alias false echo R; airgap; *ptr_b0"
							alias "out_010101" "alias true out_0101011; alias false out_0101010; airgap; *ptr_b1"
								alias "out_0101010" "alias true echo U; alias false echo T; airgap; *ptr_b0"
								alias "out_0101011" "alias true echo W; alias false echo V; airgap; *ptr_b0"
						alias "out_01011" "alias true out_010111; alias false out_010110; airgap; *ptr_b2"
							alias "out_010110" "alias true out_0101101; alias false out_0101100; airgap; *ptr_b1"
								alias "out_0101100" "alias true echo Y; alias false echo X; airgap; *ptr_b0"
								alias "out_0101101" "alias true echo [; alias false echo Z; airgap; *ptr_b0"
							alias "out_010111" "alias true out_0101111; alias false out_0101110; airgap; *ptr_b1"
								alias "out_0101110" "alias true echo ]; alias false echo \; airgap; *ptr_b0"
								alias "out_0101111" "alias true echo _; alias false echo ^; airgap; *ptr_b0"
				alias "out_011" "alias true out_0111; alias false out_0110; airgap; *ptr_b4"
					alias "out_0110" "alias true out_01101; alias false out_01100; airgap; *ptr_b3"
						alias "out_01100" "alias true out_011001; alias false out_011000; airgap; *ptr_b2"
							alias "out_011000" "alias true out_0110001; alias false out_0110000; airgap; *ptr_b1"
								alias "out_0110000" "alias true echo a; alias false echo `; airgap; *ptr_b0"
								alias "out_0110001" "alias true echo c; alias false echo b; airgap; *ptr_b0"
							alias "out_011001" "alias true out_0110011; alias false out_0110010; airgap; *ptr_b1"
								alias "out_0110010" "alias true echo e; alias false echo d; airgap; *ptr_b0"
								alias "out_0110011" "alias true echo g; alias false echo f; airgap; *ptr_b0"
						alias "out_01101" "alias true out_011011; alias false out_011010; airgap; *ptr_b2"
							alias "out_011010" "alias true out_0110101; alias false out_0110100; airgap; *ptr_b1"
								alias "out_0110100" "alias true echo i; alias false echo h; airgap; *ptr_b0"
								alias "out_0110101" "alias true echo k; alias false echo j; airgap; *ptr_b0"
							alias "out_011011" "alias true out_0110111; alias false out_0110110; airgap; *ptr_b1"
								alias "out_0110110" "alias true echo m; alias false echo l; airgap; *ptr_b0"
								alias "out_0110111" "alias true echo o; alias false echo n; airgap; *ptr_b0"
					alias "out_0111" "alias true out_01111; alias false out_01110; airgap; *ptr_b3"
						alias "out_01110" "alias true out_011101; alias false out_011100; airgap; *ptr_b2"
							alias "out_011100" "alias true out_0111001; alias false out_0111000; airgap; *ptr_b1"
								alias "out_0111000" "alias true echo q; alias false echo p; airgap; *ptr_b0"
								alias "out_0111001" "alias true echo s; alias false echo r; airgap; *ptr_b0"
							alias "out_011101" "alias true out_0111011; alias false out_0111010; airgap; *ptr_b1"
								alias "out_0111010" "alias true echo u; alias false echo t; airgap; *ptr_b0"
								alias "out_0111011" "alias true echo w; alias false echo v; airgap; *ptr_b0"
						alias "out_01111" "alias true out_011111; alias false out_011110; airgap; *ptr_b2"
							alias "out_011110" "alias true out_0111101; alias false out_0111100; airgap; *ptr_b1"
								alias "out_0111100" "alias true echo y; alias false echo x; airgap; *ptr_b0"
								alias "out_0111101" "alias true echo {; alias false echo z; airgap; *ptr_b0"
							alias "out_011111" "alias true out_0111111; alias false out_0111110; airgap; *ptr_b1"
								alias "out_0111110" "alias true echo }; alias false echo |; airgap; *ptr_b0"
								alias "out_0111111" "alias true echo; alias false echo ~; airgap; *ptr_b0"

		//Source console does not support ASCII values above 127, so there is no point in continuing this tree
		alias "out_1" "echo ?????"

///LOOP
	alias "test_0" "alias true next; test_0__b0"
		alias "test_0__b0" "alias false test_0__b1; airgap; *ptr_b0"
		alias "test_0__b1" "alias false test_0__b2; airgap; *ptr_b1"
		alias "test_0__b2" "alias false test_0__b3; airgap; *ptr_b2"
		alias "test_0__b3" "alias false test_0__b4; airgap; *ptr_b3"
		alias "test_0__b4" "alias false test_0__b5; airgap; *ptr_b4"
		alias "test_0__b5" "alias false test_0__b6; airgap; *ptr_b5"
		alias "test_0__b6" "alias false test_0__b7; airgap; *ptr_b6"
		alias "test_0__b7" "alias false skip; airgap; *ptr_b7"

///EXECUTION
	*ptr>0
	sv_allow_wait_command 1
	alias "airgap" "wait 1"

///DEBUG
	alias "pr" "print_*ptr"
	alias "print_*ptr" "alias true echo 1; alias false echo 0; print_*ptr_b7"
		alias "print_*ptr_b7" "*ptr_b7; airgap; print_*ptr_b6"
		alias "print_*ptr_b6" "*ptr_b6; airgap; print_*ptr_b5"
		alias "print_*ptr_b5" "*ptr_b5; airgap; print_*ptr_b4"
		alias "print_*ptr_b4" "*ptr_b4; airgap; print_*ptr_b3"
		alias "print_*ptr_b3" "*ptr_b3; airgap; print_*ptr_b2"
		alias "print_*ptr_b2" "*ptr_b2; airgap; print_*ptr_b1"
		alias "print_*ptr_b1" "*ptr_b1; airgap; print_*ptr_b0"
		alias "print_*ptr_b0" "*ptr_b0; airgap"